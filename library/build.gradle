apply plugin: 'com.android.library'

apply plugin: 'stringfog'
stringfog {
    // 这是加解密 key，可以自由定义。
//    def random = ["a", "b", "c", "d", "e", "f", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
//    Collections.shuffle(random)
//    key random.join()
    key getConfigKey()
    println "fogkey : " + key
    // 开关
    enable true
    // 加解密库的实现类路径，需和上面配置的加解密算法库一致。
    implementation 'com.github.megatronking.stringfog.xor.StringFogImpl'
    // 指定需加密的代码包路径，可配置多个，未指定将默认全部加密。
    // fogPackages = ['com.xxx.xxx']
}

static def getConfigKey() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return String.valueOf(("adsdk-" + formattedDate).hashCode())
}

def isSnapshot = true
def baseVersion = '5.4.6'

android {
    compileSdkVersion 30
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionName baseVersion + (isSnapshot ? "-SNAPSHOT" : "")
        buildConfigField "String", "SDK_VERSION_NAME", "\"${versionName}\""
        consumerProguardFiles 'proguard-rules-adsdk.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            println("output : " + output.toString())
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    // firebase
    implementation 'com.google.firebase:firebase-config:21.1.1'
    // stringfog
    implementation 'com.github.megatronking.stringfog:xor:1.1.0'

//////////////////////////////////////////////////////////////////////////////////////////

    // tradplus
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    //TradPlus
    implementation 'com.tradplusad:tradplus:8.0.20.1'
    // Adx
    implementation 'com.tradplusad:tradplus-adx:40.8.0.20.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    // Cross Promotion
    implementation 'com.tradplusad:tradplus-crosspromotion:27.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // applovin
    implementation 'com.applovin:applovin-sdk:11.4.4'
    // tradplus applovin mediation
    implementation 'com.tradplusad:tradplus-applovin:9.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // facebook
    implementation 'com.facebook.android:audience-network-sdk:6.11.0'
    // applovin facebook mediation
    implementation 'com.applovin.mediation:facebook-adapter:6.11.0.4@aar'
    // tradplus facebook mediation
    implementation 'com.tradplusad:tradplus-facebook:1.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // admob
    implementation 'com.google.android.gms:play-services-ads:21.1.0'
    // applovin admob mediation
    implementation 'com.applovin.mediation:google-adapter:21.1.0.0@aar'
    implementation 'com.applovin.mediation:google-ad-manager-adapter:21.1.0.0@aar'
    // tradplus admob mediation
    implementation 'com.tradplusad:tradplus-googlex:2.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // mintegral
    def mintegral_version = "16.1.81"
    implementation "com.mbridge.msdk.oversea:videojs:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:mbjscommon:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:playercommon:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:reward:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:videocommon:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:same:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:interstitialvideo:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:interstitial:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:mbnative:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:nativeex:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:mbbanner:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:mbbid:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:mbnativeadvanced:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:mbsplash:${mintegral_version}"
    implementation "com.mbridge.msdk.oversea:newinterstitial:${mintegral_version}"
    // applovin mintegral mediation
    implementation 'com.applovin.mediation:mintegral-adapter:16.1.81.0@aar'
    // tradplus mintegral mediation
    implementation 'com.tradplusad:tradplus-mintegralx_overseas:18.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // Inmobi
    implementation 'com.inmobi.monetization:inmobi-ads:10.0.7'
    // applovin inmobi mediation
    implementation 'com.applovin.mediation:inmobi-adapter:10.0.7.0@aar'
    //tradplus inmobi mediation
    implementation 'com.tradplusad:tradplus-inmobix:23.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // unity
    implementation 'com.unity3d.ads:unity-ads:4.2.1'
    // unity applovin mediation
    implementation 'com.applovin.mediation:unityads-adapter:4.2.1.0@aar'
    // tradplus unity mediation
    implementation 'com.tradplusad:tradplus-unity:5.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // vungle
    implementation 'com.vungle:publisher-sdk-android:6.11.0'
    // applovin vungle mediation
    implementation 'com.applovin.mediation:vungle-adapter:6.11.0.1'
    // tradplus vungle mediation
    implementation 'com.tradplusad:tradplus-vunglex:7.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // ironsource
    implementation 'com.ironsource.sdk:mediationsdk:7.2.3.1'
    // applovin ironsource mediation
    implementation 'com.applovin.mediation:ironsource-adapter:7.2.3.1.0'
    // tradplus ironsource mediation
    implementation 'com.tradplusad:tradplus-ironsource:10.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    implementation 'com.adcolony:sdk:4.7.1'
    // applovin adcolony mediation
    implementation 'com.applovin.mediation:adcolony-adapter:4.7.1.1'
    // tradplus adcolony mediation
    implementation 'com.tradplusad:tradplus-adcolony:4.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // Tapjoy
    implementation 'com.tapjoy:tapjoy-android-sdk:12.10.0@aar'
    // applovin tapjoy mediation
    implementation 'com.applovin.mediation:tapjoy-adapter:12.10.0.1@aar'
    // tradplus tapjoy mediation
    implementation 'com.tradplusad:tradplus-tapjoy:6.8.0.20.1'
//////////////////////////////////////////////////////////////////////////////////////////

    // Smaato
    def smaato_version = "21.8.3"
    implementation "com.smaato.android.sdk:module-core:${smaato_version}"
    implementation "com.smaato.android.sdk:module-core-light:${smaato_version}"
    implementation "com.smaato.android.sdk:module-richmedia:${smaato_version}"
    implementation "com.smaato.android.sdk:module-video:${smaato_version}"
    implementation "com.smaato.android.sdk:smaato-sdk:${smaato_version}"
    implementation "com.smaato.android.sdk:smaato-sdk-banner:${smaato_version}"
    implementation "com.smaato.android.sdk:smaato-sdk-interstitial:${smaato_version}"
    implementation "com.smaato.android.sdk:smaato-sdk-rewarded-ads:${smaato_version}"
    implementation "com.smaato.android.sdk:smaato-sdk-native:${smaato_version}"
    implementation "com.smaato.android.sdk:smaato-sdk-in-app-bidding:${smaato_version}"
    // applovin Smaato mediation
    // implementation 'com.applovin.mediation:smaato-adapter:21.8.3.1'
    // applovin Smaato mediation
    implementation 'com.tradplusad:tradplus-smaato:38.8.0.20.1'

    // chartboost
    implementation 'com.chartboost:chartboost-sdk:8.4.3'
    // applovin chartboost mediation
    implementation 'com.applovin.mediation:chartboost-adapter:8.4.3.1@aar'
    // applovin chartboost mediation
    implementation 'com.tradplusad:tradplus-chartboostx:15.8.0.20.1'
}

// 发布aar
apply plugin: 'maven'
uploadArchives {
    repositories {
        mavenDeployer {
            def url_release = "https://packages.aliyun.com/maven/repository/2017289-release-sRvHjt/"
            def url_snapshot = "https://packages.aliyun.com/maven/repository/2017289-snapshot-sJZcRc/"
            def username = "5ef3647994513bd170c627be"
            def password = "xcgJSde4Zuo4"
            repository(url: isSnapshot ? url_snapshot : url_release) {
                authentication(userName: username, password: password)
            }
            pom.version = android.defaultConfig.versionName
            pom.artifactId = "rabbit"
            pom.groupId = "com.hauyu"
            pom.packaging = "aar"
        }

    }
}

/*
apply plugin: 'maven-publish'
afterEvaluate {
    publishing {
        publications {
            android.libraryVariants.all { variant ->
                if (variant.name.contains("Release")) {
                    "maven${variant.name.cimplementationtalize()}Aar"(MavenPublication) {
                        def taskName = "bundle${variant.name.cimplementationtalize()}Aar"
                        println "taskName : " + taskName
                        artifact tasks.findByName(taskName)
                        groupId 'com.hauyu'
                        artifactId 'adsdk' + (variant.productFlavors[0].versionCode == 0 ? "" : variant.productFlavors[0].versionCode)
                        version android.defaultConfig.versionName
                        pom.withXml {
                            def dependenciesNode = asNode().appendNode('dependencies')
                            configurations.implementation.allDependencies.withType(ModuleDependency) { ModuleDependency dp ->
                                if (dp.version != "unspecified") { // 过滤项目内library引用
                                    def dependencyNode = dependenciesNode.appendNode('dependency')
                                    dependencyNode.appendNode('groupId', dp.group)
                                    dependencyNode.appendNode('artifactId', dp.name)
                                    dependencyNode.appendNode('version', dp.version)

                                    // for exclusions
                                    if (dp.excludeRules.size() > 0) {
                                        def exclusions = dependencyNode.appendNode('exclusions')
                                        dp.excludeRules.each { ExcludeRule ex ->
                                            def exclusion = exclusions.appendNode('exclusion')
                                            exclusion.appendNode('groupId', ex.group != null ? ex.group : "*")
                                            exclusion.appendNode('artifactId', ex.module)
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

            }
        }
        repositories {
            def url_release = "https://packages.aliyun.com/maven/repository/2017289-release-sRvHjt/"
            def url_snapshot = "https://packages.aliyun.com/maven/repository/2017289-snapshot-sJZcRc/"
            maven {
                url isSnapshot ? url_snapshot : url_release
                credentials {
                    username = "5ef3647994513bd170c627be"
                    password = "xcgJSde4Zuo4"
                }
            }
        }
//        repositories2 {
//            def url_release = "https://repo.rdc.aliyun.com/repository/130320-release-ATpVKH/"
//            def url_snapshot = "https://repo.rdc.aliyun.com/repository/130320-snapshot-FOUUZY/"
//            maven {
//                url isSnapshot ? url_snapshot : url_release
//                credentials {
//                    username = "CP751G"
//                    password = "TaMWu1x2fG"
//                }
//            }
//        }
    }
}
*/

apply plugin: 'maven-publish'
publishing {
    publications {
        maven(MavenPublication) {
            groupId 'cn.wjdiankong'
            artifactId 'axmleditor'
            version '1.0.4'
            artifact 'D:\\github\\tools\\lib\\AXMLEditor.jar'
        }
    }
    repositories {
        def url_release = "https://packages.aliyun.com/maven/repository/2017289-release-sRvHjt/"
        def url_snapshot = "https://packages.aliyun.com/maven/repository/2017289-snapshot-sJZcRc/"
        def username1 = "5ef3647994513bd170c627be"
        def password1 = "xcgJSde4Zuo4"
        maven {
            url url_release
            credentials {
                username = username1
                password = password1
            }
        }
    }
}