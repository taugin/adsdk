apply plugin: 'com.android.application'
apply from: '../library/encrypt.gradle'
ext {
    openRelease = true
}
def useProject = true;

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.hauyu.adsdk.demo"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ext {
            app_channels = ['vivo', 'oppo']
            channel_key = ["MY_LEBIAN", "MY_CUSTOM_CHANNEL_KEY"]
            channel_cfg = [
                    "oppo": ["label"     : "@string/app_name_oppo",
                             "icon"      : "@drawable/short_cut_icon",
                             "roundIcon" : "@drawable/ic_launcher_round",
                             "app_name"  : "AdsdkOppo"],
                    "vivo": ["label"     : "@string/app_name_vivo",
                             "icon"      : "@drawable/sysclear_short_cut_icon",
                             "roundIcon" : "@drawable/ic_launcher_round",
                             "app_name"  : "AdsdkVivo"]
            ]
        }
    }

    signingConfigs {
        config {
            keyAlias 'taugin'
            keyPassword '123456'
            storeFile file('../keystore/taugin_pwd_123456.jks')
            storePassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven {
        url rootProject.ext.publishUri
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:multidex:1.0.1'
    if (useProject) {
        implementation project(":library")
    } else {
        implementation 'com.hauyu:adsdk:+'
    }
    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
    implementation 'com.umeng.umsdk:common:9.1.0' // (必选)
    implementation 'com.umeng.umsdk:asms:1.1.3' // asms包依赖(必选)
    implementation 'com.umeng.umsdk:crash:0.0.4' // native crash包依赖(必选)
}

configurations.all {
    // resolutionStrategy.force 'com.google.android.gms:play-services-base:15.0.1'
    // resolutionStrategy.force 'com.google.firebase:firebase-analytics:15.0.2'
}

afterEvaluate {
    tasks.findAll { task ->
        if (task != null && task.name != null
                && task.name.toLowerCase().contains("version1")
                && task.name.toLowerCase().contains("release")) {
            task.onlyIf {
                return false
            }
        }
        if (task != null && task.name != null
                && task.name.toLowerCase().contains("version2")
                && task.name.toLowerCase().contains("release")) {
            task.onlyIf {
                return false
            }
        }
    }
}
// apply plugin: 'com.google.gms.google-services'

//android.applicationVariants.all{ variant ->
//    String dirPath = "${buildDir}/intermediates/merged_assets/${variant.name}/${variant.mergeAssetsProvider.name}/out/src"
//    println "+++++++++++++++++ dirPath1 : " + dirPath
//    variant.mergeAssets.doLast{
//        def sourceDir = "${buildDir}/../"   // 资源存放目录，这里是app下
//        print "================================ : " + "${sourceDir} \n"  // 打印路径
//        print "================================ : " + "${outputDir} \n"  // 打印路径
//        copy { // 将from目录下的资源拷贝到into 下目录去
//            from "${sourceDir}/res"
//            into "${outputDir}/res"
//        }
//    }
//}